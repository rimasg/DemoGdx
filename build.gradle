import com.badlogic.gdx.tools.texturepacker.TexturePacker

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.badlogicgames.gdx:gdx-tools:1.9.14'
    }
}

allprojects {
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "DemoGdx"
        gdxVersion = '1.9.14'
        roboVMVersion = '2.3.8'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxUtilsVersion = '0.13.4'
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java-library"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "com.android.application"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        api fileTree(dir: '../libs', include: ['*.jar'])
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        api "net.dermetfan.libgdx-utils:libgdx-utils:$gdxUtilsVersion"
        api "net.dermetfan.libgdx-utils:libgdx-utils-box2d:$gdxUtilsVersion"
    }

    task packGamePlayTextures {
        def inputDir = "$rootDir/desktop/assets-raw/gameplay"
        def outputDir = "$rootDir/android/assets/gameplay"

        def atlasFile = 'gameplay'
        def pack = new File("${outputDir}/${atlasFile}.png")
        def atlas = new File("${outputDir}/${atlasFile}.atlas")

        inputs.dir inputDir
        outputs.file pack
        outputs.file atlas

        doLast {
            pack.delete()
            atlas.delete()
            TexturePacker.process(inputDir, outputDir, "${atlasFile}")
        }
    }

    task packUiTextures {
        def inputDir = "$rootDir/desktop/assets-raw/ui"
        def outputDir = "$rootDir/android/assets/ui"

        def atlasFile = 'skin'
        def pack = new File("${outputDir}/${atlasFile}.png")
        def atlas = new File("${outputDir}/${atlasFile}.atlas")

        inputs.dir inputDir
        outputs.file pack
        outputs.file atlas

        doLast {
            pack.delete()
            atlas.delete()
            TexturePacker.process(inputDir, outputDir, "${atlasFile}")
        }
    }

    project.tasks.compileJava.dependsOn packGamePlayTextures
    project.tasks.compileJava.dependsOn packUiTextures
}
